;-------------------------------------------------
;SAVE
;-------------------------------------------------
@SAVEGAME_EX, ARG
#DIMS SAVEINFO_EX
#DIM CHOICE
#DIM MEMO_DATANO
#DIM MEMO_LINECOUNT

MEMO_LINECOUNT = LINECOUNT
PRINTL 

$REDRAW_SAVEDATA
REDRAW 0

SIF LASTLOAD_NO >= 0
	CALL PRINT_STRL, @"现在正在游玩_黄色_{LASTLOAD_NO, 2}号_存档。"
PRINTL 要存到几号位里呢？

CALL PRINT_SAVEDATA, ARG
PRINTL [999]返回

$INPUT_NUM
INPUT

SELECTCASE RESULT
CASE 999
	FLAG:VER_UP格子 = 1
	REDRAW 1
	RETURN 1
CASE 0 TO 20
	CHOICE = RESULT
	CHKDATA CHOICE
	;如果原本有存档
	IF RESULT == 0
		PRINTL 确定要覆盖吗？
		PRINTLC [0] 是
		PRINTLC [1] 否
		PRINTL
		
		CALL INPUT_SELECT, 2
		IF RESULT == 1
			GOTO REDRAW_SAVEDATA
		ENDIF
	ENDIF
	
	FLAG:VER_UP格子 = 0
	;FLAG:ロード時台詞 = 0
	REDRAW 1
	
	SAVEINFO_EX = %GETTIMES_CUSTOM()% %SAVEINFO_MESSAGE()%
	SAVEDATA CHOICE, SAVEINFO_EX
	
	;FLAG:ロード時台詞 = 1
	RETURN 1
ENDSELECT

CLEARLINE 1
GOTO INPUT_NUM

;-------------------------------------------------
;LOAD
;-------------------------------------------------
@LOADGAME_EX, ARG
#DIM CHOICE
#DIM MEMO_LINECOUNT

MEMO_LINECOUNT = LINECOUNT
PRINTL 

$REDRAW_SAVEDATA
REDRAW 0

SIF LASTLOAD_NO >= 0
	CALL PRINT_STRL, @"いまプレーしているのは_黄色_{LASTLOAD_NO, 2}番号_魔王城。"
PRINTPLAIN 何番目をloadするか？緑色のは一番最近のdata
PRINTL 
CALL PRINT_SAVEDATA, ARG

CHKDATA 99
PRINTFORML  [99] %RESULTS:0%
PRINTL [999] 返回

$INPUT_DATANUM
INPUT

SELECTCASE RESULT
CASE 999
	REDRAW 1
	RETURN 1
CASE 0 TO 20
	CHOICE = RESULT
	CHKDATA CHOICE
	;RESULT == 0ならロード可能
	IF RESULT != 0
		PRINTVL CHOICE
		PRINTL NO DATA
		GOTO REDRAW_SAVEDATA
	ENDIF
	REDRAW 1
	LOADDATA CHOICE
CASE 99
CHOICE = RESULT
	CHKDATA CHOICE
	;RESULT == 0ならロード可能
	IF RESULT != 0
		GOTO REDRAW_SAVEDATA
	ENDIF
	REDRAW 1
	LOADDATA CHOICE
	RETURN 1
ENDSELECT

CLEARLINE 1
GOTO INPUT_DATANUM

@PRINT_SAVEDATA, ARG
#DIM LCOUNT
#DIM LCOUNT2
#DIM LCOUNT3
#DIM NUM_SHOWLATEST
#DIM NO_SAVETIME, 20
#DIM SAVETIME_VALUE, 20
#DIM MEMO_LINECOUNT
#DIMS SHOW_FILTER

VARSET NO_SAVETIME, 19
VARSET SAVETIME_VALUE
VARSET LOCAL

NUM_SHOWLATEST = 10
;直近のセーブデータをNUM_SHOWLATEST個表示させる
FOR LCOUNT, 0, 20
	CHKDATA LCOUNT
	SAVETIME_VALUE:LCOUNT = REGET_TIME(RESULTS)

	FOR LCOUNT2, 0, NUM_SHOWLATEST
		SIF SAVETIME_VALUE:LCOUNT < SAVETIME_VALUE:(NO_SAVETIME:LCOUNT2)
			CONTINUE

		FOR LCOUNT3, 1, NUM_SHOWLATEST
			SIF NUM_SHOWLATEST - LCOUNT3 == LCOUNT2
				BREAK
			NO_SAVETIME:(NUM_SHOWLATEST - LCOUNT3) = NO_SAVETIME:(NUM_SHOWLATEST - LCOUNT3 - 1)
		NEXT

		NO_SAVETIME:LCOUNT2 = LCOUNT
		BREAK
	NEXT
NEXT

FOR LCOUNT, 0, 20
	SELECTCASE LCOUNT + ARG*20
	CASE IS >= 20
		PRINTFORML 
	CASEELSE
		CHKDATA LCOUNT + ARG*20
		PRINTFORML  [{LCOUNT + ARG*20, 2}] %RESULTS%
	ENDSELECT
NEXT
PRINTL 

SETCOLOR DEF_COLOR("緑")
MEMO_LINECOUNT = LINECOUNT
FOR LCOUNT, 0, NUM_SHOWLATEST
	SIF SAVETIME_VALUE:(NO_SAVETIME:LCOUNT) == 0
		BREAK

	CHKDATA NO_SAVETIME:LCOUNT
	PRINTFORML  [{NO_SAVETIME:LCOUNT, 2}] %RESULTS%
	SETCOLOR DEF_COLOR("水色")
NEXT
SIF LINECOUNT > MEMO_LINECOUNT
	PRINTL 
RESETCOLOR

RETURN 

;-------------------------------------------------
;返回存档对应的年月日时间
;值越大代表越新
;-------------------------------------------------
@REGET_TIME(ARGS)
#FUNCTION
#DIM LCOUNT

VARSET LOCALS
FOR LCOUNT, 0, 5
	LOCALS += @"%SUBSTRING(ARGS, LCOUNT*3, 2)%"
NEXT
RETURNF TOINT(LOCALS)

@GETTIMES_CUSTOM()
#FUNCTIONS
#DIMS TIMEINFO
;カスタム時間表示の例
;年。下二桁のみに簡略化…つまり２桁固定でいい
TIMEINFO = {(GETTIME() / 10000000000000) % 100}
;月
LOCAL = (GETTIME() / 100000000000) % 100
TIMEINFO = %TIMEINFO%/\@ LOCAL < 10 ? 0 # \@{LOCAL}
;日
LOCAL = (GETTIME() / 1000000000) % 100
TIMEINFO = %TIMEINFO%/\@ LOCAL < 10 ? 0 # \@{LOCAL}
;時
LOCAL = ((GETTIME() / 10000000) % 100) % 24
TIMEINFO = %TIMEINFO% \@ LOCAL < 10 ? 0 # \@{LOCAL}
;分
LOCAL = (GETTIME() / 100000) % 100
TIMEINFO = %TIMEINFO%:\@ LOCAL < 10 ? 0 # \@{LOCAL}

RETURNF TIMEINFO

;-------------------------------------------------
;保存存档的数据
;-------------------------------------------------
@SAVEINFO_MESSAGE()
#FUNCTIONS
#DIMS SAVEINFO
#DIM LCOUNT
#DIM CHOICE

SAVEINFO = 第{DAY}日 %TEXTS("时间")%
SAVEINFO = %SAVEINFO% 金:{MONEY}

SIF FLAG:周回数
	SAVEINFO = %SAVEINFO% {FLAG:周回数 + 1}周目
RETURNF SAVEINFO

;-------------------------------------------------
;标题进入存档界面
;-------------------------------------------------
@TITLE_LOADGAME
;タイトル画面のロードでも独自のロード画面を使う場合、@TITLE_LOADGAMEを定義する
;@TITLE_LOADGAMEが定義されていると、標準のロード画面の代わりにTITLE_LOADGAMEが呼ばれる。
CALL LOADGAME_EX

;-------------------------------------------------
;自动存档
;-------------------------------------------------
@SYSTEM_AUTOSAVE
#DIMS SAVEINFO_EX
SAVEINFO_EX = %GETTIMES_CUSTOM()% %SAVEINFO_MESSAGE()%
SAVEDATA 99, SAVEINFO_EX

;-------------------------------------------------
;获取版本号
;-------------------------------------------------
@VERS_ERACHESS()
#FUNCTIONS
RETURNF TEXTS("0.001", GAMEBASE_VERSION)