
;-------------------------------------------------
;ある条件におけるキャラ以外の数の判定
;NUMの内部使用は禁止
;-------------------------------------------------
@NUM(ARGS, ARG)
#FUNCTION
#DIM LCOUNT
#DIM COUNT1

LOCAL = 0
SELECTCASE ARGS
CASE "折り返し文字数"
	RETURNF 95
CASE "目標金額"
	RETURNF 1000000
CASE "魔王星级"
	LOCAL = 40 + ARG - 301
	RETURNF FLAG:LOCAL
CASE "种族"
	RETURNF BASE:ARG:种族
CASE "勇者数量"
	FOR COUNT1, 0, 600
		IF ENEMY:COUNT1 != 0
			LOCAL += 1
		ENDIF
	NEXT
ENDSELECT
RETURNF LOCAL

;---------------------------------------
;统一进行モンスター角色的增加和删除操作
;ADD的ARG为角色表的编号 DEL的ARG为角色编号
;ARG:1为新增加的角色レベル
@ADD_SUCCUBUS_CHARA, ARG, ARG:1
#DIM SUCCUBUS_RACE_NUM
#DIM NEW_CHARA_NUM
#DIM COUNT1
ADDCHARA ARG
TRYCALLFORM SUCCUBUS_INIT_{ARG}
NEW_CHARA_NUM = CHARANUM - 1
CALL SORT_SUCCUBUS_LIST, NEW_CHARA_NUM, 0

SUCCUBUS_RACE_NUM = RESULT

;升级
IF ARG:1 > 1
	FOR LOCAL, 1, ARG:1
		CALL SUCCUBUS_LV_UP, NEW_CHARA_NUM
		BASE:NEW_CHARA_NUM:精液 = 0
	NEXT
ENDIF
;记录已经获得过
SUCCUBUS_GOT:ARG = 1       


;自动命名
CALL CALL_SUCCUBUS_NAME,NEW_CHARA_NUM,0
CSTR:NEW_CHARA_NUM:昵称 = %TEXT_RETURN:0%{SUCCUBUS_RACE_NUM}
CALL CALL_SUCCUBUS_NAME,NEW_CHARA_NUM,1
CSTR:NEW_CHARA_NUM:简称 = %TEXT_RETURN:0%{SUCCUBUS_RACE_NUM}

;增加抗性相关
TRYCALLFORM SUCCUBUS_MAGIC_RESIST_{ARG}
FOR COUNT1,1,10
	CFLAG:NEW_CHARA_NUM:(COUNT1+310) = RESULT:COUNT1
NEXT

RETURN NEW_CHARA_NUM

@DEL_SUCCUBUS_CHARA, ARG
CALL SORT_SUCCUBUS_LIST, ARG, 1
LOCAL = RESULT
DELCHARA ARG
RETURN LOCAL

;---------------------------------------
;整理モンスター名单
;基本上与CHARANUM的自动向前移动
;每次对角色进行数量操作时都需要进行一次 进行于ADDCHARA后 DELCHARA前
;ARG为角色编号,ARG:1代表进行删除操作还是增加操作
@SORT_SUCCUBUS_LIST, ARG, ARG:1
#DIM COUNT1
#DIM COUNT2
#DIM FLAG1
#DIM RACE
#DIM SUM_NUM

SUM_NUM = 0
RACE = NUM("种族", ARG)

IF ARG == 0
	FLAG1 = 0
	FOR COUNT1,1,299
		IF SUCCUBUS:COUNT1 == -1
			FLAG1 = 1
		ENDIF
		IF FLAG1 == 1
			IF SUCCUBUS:(COUNT1 + 1) != -1
				SUCCUBUS:COUNT1  = SUCCUBUS:(COUNT1 + 1)
			ELSE
				SUCCUBUS:COUNT1  = -1 
			ENDIF
		ENDIF
		SIF SUCCUBUS:COUNT1 != -1 
			SUM_NUM += 1
	NEXT
ELSE
	;0为增加操作
	IF ARG:1 == 0
		FLAG1 = 0
		FOR COUNT1,1,300
			IF SUCCUBUS:COUNT1 == -1
				SUCCUBUS:COUNT1 = ARG
				FLAG1 = 1
			ENDIF
			SIF FLAG1 == 1
				BREAK
		NEXT
		TRYCALLFORM SUCCUBUS_ADD_{RACE}, ARG
		RETURN RESULT

	;1为删除操作
	ELSEIF ARG:1 == 1 
		;删除モンスター名单中的编号并整理其他编号
		FOR COUNT1,1,300
			IF SUCCUBUS:COUNT1 == ARG
				SUCCUBUS:COUNT1 = -1
			ENDIF
			IF SUCCUBUS:COUNT1 > ARG
				SUCCUBUS:COUNT1 -= 1
			ENDIF
		NEXT
		FLAG1 = 0
		FOR COUNT1,1,299
			IF SUCCUBUS:COUNT1 == -1
				FLAG1 = 1
			ENDIF
			IF FLAG1 == 1
				IF SUCCUBUS:(COUNT1 + 1) != -1
					SUCCUBUS:COUNT1  = SUCCUBUS:(COUNT1 + 1)
				ELSE
					SUCCUBUS:COUNT1  = -1 
				ENDIF
			ENDIF
			SIF SUCCUBUS:COUNT1 != -1 
				SUM_NUM += 1
		NEXT

		;删除在モンスター种类数量列表中的位置并重新整理角色号码
		TRYCALLFORM SUCCUBUS_DEL_{RACE}, ARG

		FOR COUNT1,0,300
			FOR COUNT2,1,300
				IF SUCCUBUS_NUM:COUNT1:COUNT2 > ARG
					SUCCUBUS_NUM:COUNT1:COUNT2 -= 1
				ENDIF 
			NEXT
		NEXT

		;重新整理モンスター地宫位置列表，并删除
		FOR COUNT1, 0, 10
			FOR COUNT2, 0, 10
				IF SUCCUBUS_LOCATION:COUNT1:COUNT2 == ARG
					SUCCUBUS_LOCATION:COUNT1:COUNT2 = -1
				ELSEIF SUCCUBUS_LOCATION:COUNT1:COUNT2 > ARG
					SUCCUBUS_LOCATION:COUNT1:COUNT2 -= 1
				ENDIF
			NEXT
		NEXT

		FOR COUNT1,1,3
			SIF BOSSROOM_SUCCUBUS:COUNT1 == -1
				CONTINUE
			IF BOSSROOM_SUCCUBUS:COUNT1 == ARG
				BOSSROOM_SUCCUBUS:COUNT1 = -1
				BREAK
			ENDIF
		NEXT


	;其他状态进行整理
	ELSE
		FLAG1 = 0
		FOR COUNT1,1,299
			IF SUCCUBUS:COUNT1 == -1
				FLAG1 = 1
			ENDIF
			IF FLAG1 == 1
				IF SUCCUBUS:(COUNT1 + 1) != -1
					SUCCUBUS:COUNT1  = SUCCUBUS:(COUNT1 + 1)
				ELSE
					SUCCUBUS:COUNT1  = -1 
				ENDIF
			ENDIF
			SIF SUCCUBUS:COUNT1 != -1 
				SUM_NUM += 1
		NEXT

	ENDIF
ENDIF

;返回除魔王外的モンスター数量
RETURN SUM_NUM

;---------------------------------
;计算因モンスター消耗的水晶数
@SUCCUBUS_COST
#DIM COUNT1
#DIM COUNT2
#DIM SUM_COST
FOR COUNT1, DUNGEON_START_X, DUNGEON_END_X
	FOR COUNT2, DUNGEON_START_Y, DUNGEON_END_Y
		IF SUCCUBUS_LOCATION:COUNT1:COUNT2 > 0
			TRYCALLFORM SUCCUBUS_COST_{SUCCUBUS_LOCATION:COUNT1:COUNT2}
			SUM_COST += RESULT
		ENDIF
	NEXT
NEXT

RETURN SUM_COST

;---------------------------------
;计算因房间消耗的水晶数
@ROOM_COST
#DIM COUNT1
#DIM COUNT2
#DIM SUM_COST
FOR COUNT1, DUNGEON_START_X, DUNGEON_END_X
	FOR COUNT2, DUNGEON_START_Y, DUNGEON_END_Y
		TRYCALLFORM ROOM_COST_{DUNGEON:COUNT1:COUNT2}
		SUM_COST += RESULT
	NEXT
NEXT

RETURN SUM_COST

;----------------------------------------------------
;返回モンスター所在的房间名字
;如果モンスター没有出场那么返回空
@WHERE_IS_SUCCUBUS,ARG
#DIM COUNT1
#DIM COUNT2
#DIM FOUND_FLAG
VARSET TEXT_RETURN

FOUND_FLAG = 0

FOR COUNT1,0,3
	IF BOSSROOM_SUCCUBUS:COUNT1 == ARG
		TEXT_RETURN:0 = 魔王宫殿
		FOUND_FLAG = 1
	ENDIF
NEXT

FOR COUNT1,DUNGEON_START_X,DUNGEON_END_X + 1
    FOR COUNT2,DUNGEON_START_Y,DUNGEON_END_Y + 1
        IF SUCCUBUS_LOCATION:COUNT1:COUNT2 == ARG
            TRYCALLFORM ROOM_NAME_{DUNGEON:COUNT1:COUNT2}
			FOUND_FLAG = 1
            BREAK
        ENDIF
    NEXT
	IF FOUND_FLAG == 1
		BREAK
	ENDIF
NEXT

;-----------------------------------------------
;返回升级后的角色属性
;ARG,表示升级方式，
;0表示对勇者升级，升级概率为 33%获得5生命值 33%获得1攻击 17%获得1防御力
;1表示对魔物进行普通升级，升级概率为 33%获得10生命值 33%获得2攻击 33%获得1防御力
;根据后勤设施，升级方式会发生变化
@CHARA_LV_UP, ARG
#DIM COUNT1
#DIM CHOICE
CHOICE = RAND(100)
VARSET LOCAL
SELECTCASE ARG
	CASE 0
		SELECTCASE CHOICE
			CASE 0 TO 32
				LOCAL:0 = 5
			CASE 33 TO 65
				LOCAL:1 = 1
			CASE 66 TO 82
				LOCAL:2 = 1
		ENDSELECT

	CASE 1
		SELECTCASE CHOICE
			CASE 0 TO 32
				LOCAL:0 = 10
			CASE 33 TO 65
				LOCAL:1 = 2
			CASE 66 TO 99
				LOCAL:2 = 1
		ENDSELECT
	CASEELSE 
		PRINT  未解锁的升级方式
ENDSELECT

RETURN LOCAL:0, LOCAL:1, LOCAL:2

;モンスター专用的升级函数
;ARG为目标的编号
@SUCCUBUS_LV_UP, ARG
BASE:ARG:レベル += 1
CALL CHARA_LV_UP,1
BASE:ARG:HP +=  RESULT:0
BASE:ARG:攻撃力 +=  RESULT:1
BASE:ARG:防御力 +=  RESULT:2
BASE:ARG:精液 -= MAX(0, BASE:ARG:子宫容量)
BASE:ARG:子宫容量 += 10


;-------------------------------------------------
;初始化勇者的能力和状态
;ARG为勇者的编号 ARG:1为勇者的レベル
;-------------------------------------------------
@ENEMY_INIT, ARG, ARG:1
#DIM COUNT1
#DIM HP
#DIM ATT
#DIM DEF
#DIM SPEED 
#DIM RESISTANT
#DIM RESIST,10
#DIM ENEMY_RACE
ENEMY_RACE = ENEMY:ARG

TRYCALLFORM ENEMY_START_HP_{ENEMY_RACE}
HP = RESULT
TRYCALLFORM ENEMY_START_ATT_{ENEMY_RACE}
ATT = RESULT
TRYCALLFORM ENEMY_START_DEF_{ENEMY_RACE}
DEF = RESULT
TRYCALLFORM ENEMY_START_SPEED_{ENEMY_RACE}
SPEED = RESULT
TRYCALLFORM ENEMY_RESISTANT_{ENEMY_RACE}
RESISTANT = RESULT
TRYCALLFORM ENEMY_MAGIC_RESIST_{ENEMY_RACE}
FOR COUNT1,1,10
	RESIST:COUNT1 = RESULT:COUNT1
NEXT

FOR COUNT1,1,ARG:1
    CALL CHARA_LV_UP,0
    HP += RESULT:0
    ATT += RESULT:1
    DEF += RESULT:2
NEXT

ENEMY_HP:ARG = HP
ENEMY_NOW_HP:ARG = HP
ENEMY_ATT:ARG = ATT
ENEMY_DEF:ARG = DEF
ENEMY_SPEED:ARG = SPEED
ENEMY_RESISTANT:ARG = RESISTANT
FOR COUNT1,1,10
	ENEMY_MAGIC_RESIST:ARG:COUNT1 = RESIST:COUNT1
NEXT

LOCAL = 0
FOR COUNT1,0,10
	IF ENTER_X:COUNT1 == 0 || ENTER_Y:COUNT1 == 0
		CONTINUE
	ENDIF
	LOCAL += 1
NEXT

LOCAL:1 = RAND(LOCAL)
ENEMY_LOCATION_X:ARG = ENTER_X:(LOCAL:1)
ENEMY_LOCATION_Y:ARG = ENTER_Y:(LOCAL:1)

;---------------------------------------------
;限制只有当天数超过一定值时才会出现更高星级的勇者
;ARG 为天数
@DAY_ENEMY_STAR_LIMIT, ARG
SELECTCASE ARG
	CASE 1 TO 20
		RETURN 1
	CASE 21 TO 40
		RETURN 3
	CASE 41 TO 60
		RETURN 7
	
ENDSELECT

;---------------------------------------------
;统计各个房间中的勇者信息
;更新ENEMY_DUNGEON_LOCATION
@CAL_ENEMY_IN_ROOM
#DIM COUNT1
#DIM COUNT2
#DIM COUNTX
#DIM COUNTY
VARSET ENEMY_DUNGEON_LOCATION,0

FOR COUNT1,0,600
	IF ENEMY:COUNT1 > 0
		COUNTX = ENEMY_LOCATION_X:COUNT1
		COUNTY = ENEMY_LOCATION_Y:COUNT1
		;正式进入地宫的勇者才会被统计
		IF (COUNTX >= DUNGEON_START_X) && (COUNTX <= DUNGEON_END_X)
			IF (COUNTY >= DUNGEON_START_Y) && (COUNTX <= DUNGEON_END_Y)
				ENEMY_DUNGEON_LOCATION:COUNTX:COUNTY:0 += 1
				ENEMY_DUNGEON_LOCATION:COUNTX:COUNTY:(ENEMY_DUNGEON_LOCATION:COUNTX:COUNTY:0) = COUNT1
			ENDIF
		ENDIF
	ENDIF
NEXT

;-------------------------------------------
;检查是否是罠房间
;后勤设施与监牢也算是罠
;但是祝福和腐化祝福不算罠
@CHECK_TRAP, ARG, ARG:1
#DIM ROOM_TYPE

TRYCALLFORM ROOM_STYLE_{DUNGEON:ARG:(ARG:1)}
SELECTCASE RESULT
	CASE 0,2,3
		RETURN 1
	CASE 1,4,5
		RETURN 0
ENDSELECT

;-------------------------------------------
;返还モンスター战利品星级
@DECIDE_SUCCUBUS_LOOT
#DIM COUNT1
#DIM CHOICE

LOCAL = 0
;一星概率
LOCAL += FLAG:一星
LOCAL += FLAG:二星
LOCAL += FLAG:三星
LOCAL += FLAG:四星
LOCAL += FLAG:五星

CHOICE = RAND(LOCAL)
SELECTCASE CHOICE
	CASE CHOICE < FLAG:一星
		RETURN 1
	CASE CHOICE < FLAG:一星 + FLAG:二星
		RETURN 2
	CASE CHOICE < FLAG:一星 + FLAG:二星 + FLAG:三星
		RETURN 3
	CASE CHOICE < FLAG:一星 + FLAG:二星 + FLAG:三星 + FLAG:四星
		RETURN 4
	CASE CHOICE < FLAG:一星 + FLAG:二星 + FLAG:三星 + FLAG:四星 + 五星
		RETURN 5
ENDSELECT


;返还设施战利品星级
@DECIDE_ROOM_LOOT
#DIM COUNT1
#DIM CHOICE

LOCAL = 0
;一星概率
LOCAL += FLAG:一星
LOCAL += FLAG:二星
LOCAL += FLAG:三星
LOCAL += FLAG:四星

CHOICE = RAND(LOCAL)
SELECTCASE CHOICE
	CASE CHOICE < FLAG:一星
		RETURN 1
	CASE CHOICE < FLAG:一星 + FLAG:二星
		RETURN 2
	CASE CHOICE < FLAG:一星 + FLAG:二星 + FLAG:三星
		RETURN 3
	CASE CHOICE < FLAG:一星 + FLAG:二星 + FLAG:三星 + FLAG:四星
		RETURN 4
ENDSELECT


;返还武器战利品星级
@DECIDE_WEAPON_LOOT
#DIM COUNT1
#DIM CHOICE

LOCAL = 0
;一星概率
LOCAL += FLAG:一星
LOCAL += FLAG:二星
LOCAL += FLAG:三星
LOCAL += FLAG:四星

CHOICE = RAND(LOCAL)
SELECTCASE CHOICE
	CASE CHOICE < FLAG:一星
		RETURN 1
	CASE CHOICE < FLAG:一星 + FLAG:二星
		RETURN 2
	CASE CHOICE < FLAG:一星 + FLAG:二星 + FLAG:三星
		RETURN 3
	CASE CHOICE < FLAG:一星 + FLAG:二星 + FLAG:三星 + FLAG:四星
		RETURN 4
ENDSELECT

;随机返还某一个星级的某一个モンスター编号
;ARG为目标的星级
@RAND_SUCCUBUS_IN_RANK, ARG
#DIM COUNT1
#DIM COUNT2
#DIM RAND_NO
VARSET LOCAL
COUNT2 = 0
;モンスター种类上限为300 从1开始
FOR COUNT1,1,301
	TRYCALLFORM SUCCUBUS_STAR_{COUNT1}
	IF RESULT == ARG
		TRYCALLFORM SUCCUBUS_BAG_CHECK_{COUNT1}
		IF RESULT == 1
			TRYCALLFORM SUCCUBUS_ONLY_SYN_{COUNT1}
			IF RESULT == 0
				TRYCALLFORM SUCCUBUS_ONLY_{COUNT1}
				IF RESULT == 0
					LOCAL:COUNT2 = COUNT1
					COUNT2 += 1
				ENDIF
			ENDIF
		ENDIF
	ENDIF
NEXT

SIF COUNT2 == 0
	RETURN -1

RAND_NO = RAND(COUNT2)

RETURN LOCAL:RAND_NO

;随机返还某一个星级的某一个设施编号
;ARG为目标的星级
@RAND_ROOM_IN_RANK, ARG
#DIM COUNT1
#DIM COUNT2
#DIM RAND_NO
VARSET LOCAL
COUNT2 = 0
;房间种类没有上限，目前先设置到300
;第0 1号房间无法获得
FOR COUNT1,1,301
	TRYCALLFORM ROOM_RANK_{COUNT1}
	IF RESULT == ARG
		TRYCALLFORM ROOM_BAG_CHECK_{COUNT1}
		IF RESULT == 1
			TRYCALLFORM  ROOM_GET_FROM_{COUNT1}
			IF RESULT == 1
				TRYCALLFORM ROOM_ONLY_{COUNT1}
				;只能存在一个的房间需要特殊处理
				IF RESULT == 0
					LOCAL:COUNT2 = COUNT1
					COUNT2 += 1
				ENDIF
			ENDIF
		ENDIF
	ENDIF
NEXT

SIF COUNT2 == 0
	RETURN -1

RAND_NO = RAND(COUNT2)

RETURN LOCAL:RAND_NO


;随机返还某一个星级的某一个武器编号
;ARG为目标的星级
@RAND_WEAPON_IN_RANK, ARG
#DIM COUNT1
#DIM COUNT2
#DIM RAND_NO
VARSET LOCAL
COUNT2 = 0
;武器编号的上限为300
FOR COUNT1,1,301
	TRYCALLFORM WEAPON_RANK_{COUNT1}
	IF RESULT == ARG
		TRYCALLFORM  WEAPON_GET_FROM_{COUNT1}
		IF RESULT == 1
			TRYCALLFORM WEAPON_ONLY_{COUNT1}
			;只能存在一个的武器需要特殊处理
			IF RESULT == 0
				LOCAL:COUNT2 = COUNT1
				COUNT2 += 1
			ENDIF
		ENDIF
	ENDIF
NEXT

SIF COUNT2 == 0
	RETURN -1

RAND_NO = RAND(COUNT2)

RETURN LOCAL:RAND_NO

;------------------------------------
;决定会出现什么宝物
;返回三个宝物的编号
@RAND_TREASURE
#DIM TREASURE_NUM
#DIM LIST, 500
#DIM COUNT1
#DIM RAND_NO
#DIM GET_TREASURE,3

GET_TREASURE:0 = -1
GET_TREASURE:1 = -1
GET_TREASURE:2 = -1
TREASURE_NUM = 0
COUNT1 = 0
FOR COUNT1, 0, 500
    TRYCALLFORM TREASURE_{COUNT1}
    IF RESULT == 1
        TRYCALLFORM TREASURE_GET_{COUNT1}
        IF RESULT == 0
            LIST:TREASURE_NUM = COUNT1
            TREASURE_NUM = TREASURE_NUM + 1 
        ENDIF
    
    ENDIF
NEXT

IF TREASURE_NUM <= 3
    RETURN LIST:0,LIST:1,LIST:2
	
ENDIF

FOR COUNT1, 0, 3
    $SELECT_AGAIN
	RAND_NO = RAND(TREASURE_NUM)
	IF RAND_NO == LIST:0 || RAND_NO == LIST:1
		GOTO SELECT_AGAIN
	ENDIF
	GET_TREASURE:COUNT1 = LIST:RAND_NO
NEXT


RETURN GET_TREASURE:0,GET_TREASURE:1,GET_TREASURE:2

;-----------------------------------------
;返回房间类型名字
@ROOM_STYLE, ARG
VARSET TEXT_RETURN
TRYCALLFORM ROOM_STYLE_{ARG}
SELECTCASE RESULT
	CASE 0
		TEXT_RETURN:0 = 罠
	CASE 1
		TEXT_RETURN:0 = 戦い部屋
	CASE 2
		TEXT_RETURN:0 = 后勤
	CASE 3
		TEXT_RETURN:0 = 监牢
	CASE 4
		TEXT_RETURN:0 = 祝福
	CASE 5
		TEXT_RETURN:0 = 腐化祝福
	CASE 9
		TEXT_RETURN:0 = 待建地块
ENDSELECT

;-----------------------------------------
;返回装备类型名字
@WEAPON_STYLE, ARG
VARSET TEXT_RETURN
SELECTCASE ARG
	CASE 0
		TEXT_RETURN:0 = 武器
	CASE 1
		TEXT_RETURN:0 = 上身护甲
	CASE 2
		TEXT_RETURN:0 = 下身护甲
ENDSELECT


;-----------------------------------------
;由当前获得的经验值和レベル计算升级后的レベル
;ARG为当前的レベル ARG:1为获得的经验值 ARG:2为当前盈余的经验值
@EXP_TO_LEVEL(ARG, ARG:1, ARG:2) 
#FUNCTION
#DIM COUNT1
#DIM EXP_NEED
#DIM EXP_GAIN

EXP_NEED = 90 + 10*ARG
EXP_GAIN = ARG:1 + ARG:2
WHILE EXP_GAIN >= EXP_NEED
	ARG += 1
	EXP_GAIN -= EXP_NEED
	EXP_NEED += 10
WEND
RETURNF ARG


;-----------------------------------------
;由当前获得的经验值和レベル计算升级后的レベル
;ARG为当前的レベル ARG:1为当前盈余的经验值
@LEVEL_TO_EXP(ARG,ARG:1)
#FUNCTION
#DIM COUNT1
#DIM EXP_NEED
#DIM EXP_GAIN
EXP_GAIN = ARG:1
WHILE ARG > 1
	ARG -= 1
	EXP_NEED = 90 + 10*ARG
	EXP_GAIN = EXP_NEED + EXP_GAIN
WEND
RETURNF EXP_GAIN

;----------------------------------------
;计算当前房间已经使用了的水晶数
;ARG为房间种类 ARG:1为房间レベル
@CAL_ROOM_JB, ARG, ARG:1
#DIM COUNT1
#DIM COUNT2
TRYCALLFORM ROOM_RANK_{ARG}
LOCAL = RESULT
COUNT2 = RESULT
FOR LOCAL,0,ARG:1
	COUNT1 += COUNT2
	COUNT2 = (1 + LOCAL/10) * LOCAL
NEXT
RETURN COUNT1

;---------------------------------------
;用水晶升级房间
;ARG为房间种类， ARG:1为新房间レベル， ARG:2为使用的水晶
; ARG:3, ARG:4为房间的坐标
@ROOM_LV_UP, ARG, ARG:1, ARG:2, ARG:3, ARG:4
#DIM COUNT1
#DIM COUNT2
TRYCALLFORM ROOM_RANK_{ARG}
LOCAL = RESULT
COUNT2 = (1 + ARG:1/10) * LOCAL - DUNGEON_EXP:(ARG:3):(ARG:4)
WHILE ARG:2 >= COUNT2
	ARG:2 -= COUNT2
	ARG:1 += 1
	COUNT2 = (10 + ARG:1) * LOCAL /10
	DUNGEON_EXP:(ARG:3):(ARG:4) = 0

WEND
DUNGEON_EXP:(ARG:3):(ARG:4) = ARG:2 + DUNGEON_EXP:(ARG:3):(ARG:4)

RETURN ARG:1

;当房间升级时自动对内部的モンスター进行重新进入的操作
;并且在此处正式对房间的レベル进行更改
;ARG房间种类
;ARG:1,ARG:2 房间坐标
;ARG:3 房间升级后的レベル
@ROOM_LV_CHANGE,ARG,ARG:1,ARG:2,ARG:3
#DIM LOCATIONX
#DIM LOCATIONY
#DIM SUCCUBUS_NO

LOCATIONX = ARG:1
LOCATIONY = ARG:2
SUCCUBUS_NO = SUCCUBUS_LOCATION:LOCATIONX:LOCATIONY
;暂时从房间中删除モンスター
CALL DEL_SUCCUBUS_FROM_DUNGEON, SUCCUBUS_NO
DUNGEON_LEVEL:LOCATIONX:LOCATIONY = ARG:3
;将モンスター重新加入房间
SUCCUBUS_LOCATION:LOCATIONX:LOCATIONY = SUCCUBUS_NO
IF SUCCUBUS_NO > 0
	TRYCALLFORM ROOM_ACT_{DUNGEON:LOCATIONX:LOCATIONY}, SUCCUBUS_NO, 0, 0,DUNGEON_LEVEL:LOCATIONX:LOCATIONY, LOCATIONX, LOCATIONY
ENDIF

@RESET_TEXT_RETURN
VARSET TEXT_RETURN
RETURN 1

@RESET_BATTLE_LOG
VARSET BATTLE_LOG
BATTLE_LOG_NUM = 0
RETURN 1


;------------------------------
;寻找种类为ARG的房间的位置
;返回找到的房间的数量和记录坐标的数组
@FIND_ROOM,ARG
#DIM COUNTER1
#DIM COUNTER2
#DIM ROOM_NUM
#DIM RESULT_X,20
#DIM RESULT_Y,20

ROOM_NUM = 0
FOR COUNTER1,DUNGEON_START_X,DUNGEON_END_X+1
    FOR COUNTER2,DUNGEON_START_Y,DUNGEON_END_Y+1
		IF DUNGEON:COUNTER1:COUNTER2  == ARG
			RESULT_X:ROOM_NUM = COUNTER1
			RESULT_Y:ROOM_NUM = COUNTER2
			ROOM_NUM += 1
		ENDIF
	NEXT
NEXT

RETURN ROOM_NUM,RESULT_X,RESULT_Y

;---------------------------
;根据房间的星级检定房间是否存在
;待建地块视为不存在
@CHECK_ROOM_TYPE_EXIST, ARG
LOCAL = 0
TRYCALLFORM ROOM_RANK_{ARG}
LOCAL = RESULT
IF LOCAL <= 0
    RETURN -1
ELSE
	RETURN 1
ENDIF

;---------------------------
;根据魔物的星级检定魔物是否存在
;不显示魔王的
@CHECK_SUCCUBUS_TYPE_EXIST, ARG
LOCAL = 0
TRYCALLFORM SUCCUBUS_STAR_{ARG}
LOCAL = RESULT
IF LOCAL <= 0
    RETURN -1
ELSE
	RETURN 1
ENDIF

;对敌人造成的魔法伤害 所有的魔法伤害结算都在这里
;冰伤害为1，火伤害为2，电伤害为3，酸伤害为4，风伤害为5，暗伤害为6，光伤害为7,喜び伤害为8
;ARG为勇者的编号
;ARG:1为受到的伤害量
;ARG:2为魔法伤害的类型
@MAGIC_ATTACK_TO_ENEMY,ARG,ARG:1,ARG:2
#DIM DAMEGE
IF (ARG:1 <= 0) || (ARG <= -1)
    PRINT 编号错误 魔法攻击函数
    RETURN
ENDIF

DAMEGE = ARG:1

IF ENEMY_MAGIC_RESIST:ARG:(ARG:2) == -1
	DAMEGE = DAMEGE * 2
ELSEIF ENEMY_MAGIC_RESIST:ARG:(ARG:2) == 1
	DAMEGE = DAMEGE / 2
ELSEIF ENEMY_MAGIC_RESIST:ARG:(ARG:2) == 2
	DAMEGE = DAMEGE / 10
ENDIF
ENEMY_NOW_HP:ARG = ENEMY_NOW_HP:ARG - DAMEGE

;对モンスター造成的魔法伤害
;主要来源于勇者的技能
;ARG为モンスター的编号
;ARG:1为受到的伤害量
;ARG:2为魔法伤害的类型
@MAGIC_ATTACK_TO_SUCCUBUS,ARG,ARG:1,ARG:2
#DIM DAMEGE
IF (ARG:1 <= 0) || (ARG <= -1)
    PRINT 编号错误 魔法攻击函数
    RETURN
ENDIF

DAMEGE = ARG:1
IF CFLAG:ARG:(310 + ARG:2) == -1
	DAMEGE = DAMEGE * 2
ELSEIF CFLAG:ARG:(310 + ARG:2) == 1
	DAMEGE = DAMEGE / 2
ELSEIF CFLAG:ARG:(310 + ARG:2) == 2
	DAMEGE = DAMEGE / 10
ENDIF
ENEMY_NOW_HP:ARG -= DAMEGE

;对房间内所有的敌人附加状态
;ARG:0为坐标X ARG:1为坐标Y
;ARG:2为状态编号
;ARG:3为状态数值
@ADD_STATE_TO_ALL_ENEMY,ARG:0,ARG:1,ARG:2,ARG:3
#DIM ENEMY_X
#DIM ENEMY_Y
#DIM COUNT1
#DIM ROOM_ENEMY_NUM
ENEMY_X = ARG:0
ENEMY_Y = ARG:1
ROOM_ENEMY_NUM = ENEMY_DUNGEON_LOCATION:ENEMY_X:ENEMY_Y:0 + 1
IF ROOM_ENEMY_NUM == 1
    RETURN 0
ENDIF
FOR COUNT1,1,ROOM_ENEMY_NUM
    IF ENEMY_DUNGEON_LOCATION:ENEMY_X:ENEMY_Y:COUNT1 <= 0
        CONTINUE
    ENDIF
    TRYCALLFORM ADD_ENEMY_STATE_{ARG:2},ENEMY_DUNGEON_LOCATION:ENEMY_X:ENEMY_Y:COUNT1, ARG:3
NEXT

;由于房间效果对房间内的所有敌人附加伤害
;ARG:0为坐标X ARG:1为坐标Y
;ARG:2为状伤害属性
;ARG:3为伤害数值
@ROOM_ATTACK_ALL_ENEMY,ARG:0,ARG:1,ARG:2,ARG:3
#DIM ENEMY_X
#DIM ENEMY_Y
#DIM COUNT1
#DIM ROOM_ENEMY_NUM
ENEMY_X = ARG:0
ENEMY_Y = ARG:1
ROOM_ENEMY_NUM = ENEMY_DUNGEON_LOCATION:ENEMY_X:ENEMY_Y:0 + 1
IF ROOM_ENEMY_NUM == 1
    RETURN 0
ENDIF
FOR COUNT1,1,ROOM_ENEMY_NUM
    IF ENEMY_DUNGEON_LOCATION:ENEMY_X:ENEMY_Y:COUNT1 <= 0
        CONTINUE
    ENDIF
    CALL ROOM_ATTACK,ENEMY_DUNGEON_LOCATION:ENEMY_X:ENEMY_Y,ARG:3,ARG:2
NEXT